name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Build binaries for all platforms
      run: |
        VERSION="${{ steps.get_version.outputs.VERSION }}"
        COMMIT="${GITHUB_SHA}"
        DATE=$(date -u +%Y-%m-%dT%H:%M:%SZ)
        LDFLAGS="-X github.com/orkes-io/conductor-cli/cmd.Version=${VERSION} -X github.com/orkes-io/conductor-cli/cmd.Commit=${COMMIT} -X github.com/orkes-io/conductor-cli/cmd.Date=${DATE}"

        # Create dist directory
        mkdir -p dist

        # Build for Linux amd64
        GOOS=linux GOARCH=amd64 go build -ldflags "$LDFLAGS" -o dist/orkes_linux_amd64

        # Build for Linux arm64
        GOOS=linux GOARCH=arm64 go build -ldflags "$LDFLAGS" -o dist/orkes_linux_arm64

        # Build for macOS amd64
        GOOS=darwin GOARCH=amd64 go build -ldflags "$LDFLAGS" -o dist/orkes_darwin_amd64

        # Build for macOS arm64
        GOOS=darwin GOARCH=arm64 go build -ldflags "$LDFLAGS" -o dist/orkes_darwin_arm64

        # Build for Windows amd64
        GOOS=windows GOARCH=amd64 go build -ldflags "$LDFLAGS" -o dist/orkes_windows_amd64.exe

        # Build for Windows arm64
        GOOS=windows GOARCH=arm64 go build -ldflags "$LDFLAGS" -o dist/orkes_windows_arm64.exe

        # Make binaries executable
        chmod +x dist/orkes_*

    - name: Generate changelog
      id: changelog
      run: |
        # Get the previous tag
        PREV_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1) 2>/dev/null || echo "")

        if [ -z "$PREV_TAG" ]; then
          # First release - use all commits
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges)
        else
          # Get commits since previous tag
          CHANGELOG=$(git log ${PREV_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
        fi

        # Write changelog to file
        echo "$CHANGELOG" > CHANGELOG.txt
        cat CHANGELOG.txt

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        body_path: CHANGELOG.txt
        files: |
          dist/orkes_linux_amd64
          dist/orkes_linux_arm64
          dist/orkes_darwin_amd64
          dist/orkes_darwin_arm64
          dist/orkes_windows_amd64.exe
          dist/orkes_windows_arm64.exe
        draft: false
        prerelease: ${{ contains(steps.get_version.outputs.VERSION, '-') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update install script permissions
      run: |
        # Ensure install.sh has correct permissions in the repo
        if [ -f install.sh ]; then
          chmod +x install.sh
        fi
